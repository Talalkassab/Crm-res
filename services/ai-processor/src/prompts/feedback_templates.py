"""
Feedback Collection Prompt Templates
Arabic prompts for adaptive feedback conversations
"""

from typing import Dict, List
from datetime import datetime


class FeedbackPrompts:
    """Arabic prompt templates for feedback collection"""
    
    def __init__(self):
        self.greeting_templates = {
            "default": """
            أنت مساعد ذكي لمطعم سعودي تقوم بجمع تقييمات العملاء.
            مهمتك هي بدء محادثة ودودة لطلب تقييم زيارة العميل الأخيرة.
            
            أسلوبك:
            - ودود ومرحب
            - مهذب ومحترم
            - يستخدم اللهجة السعودية الخفيفة
            - يشكر العميل على الزيارة
            - يطلب التقييم بطريقة طبيعية
            """,
            
            "formal": """
            أنت ممثل خدمة عملاء محترف لمطعم راقي.
            تتواصل بأسلوب رسمي ومهذب لطلب تقييم تجربة العميل.
            
            أسلوبك:
            - رسمي ومهذب
            - يستخدم العربية الفصحى
            - يعبر عن التقدير والامتنان
            - يطلب التقييم بطريقة مهنية
            """,
            
            "casual": """
            أنت صديق ودود يمثل مطعم شعبي محبوب.
            تتحدث بطريقة غير رسمية وودودة لطلب رأي العميل.
            
            أسلوبك:
            - ودود وبسيط
            - يستخدم اللهجة المحلية
            - مليء بالحيوية والإيجابية
            - يجعل العميل يشعر بالراحة
            """
        }
        
        self.stage_prompts = {
            "message_analysis": """
            أنت محلل ذكي متخصص في فهم رسائل العملاء باللغة العربية والتحليل العاطفي.
            
            مهمتك تحليل رسالة العميل واستخراج:
            1. المشاعر العامة (إيجابي/محايد/سلبي) برقم من -1 إلى 1
            2. وجود تقييم رقمي (نجوم، درجات، أرقام)
            3. المواضيع المذكورة (طعام، خدمة، نظافة، أسعار، إلخ)
            4. مستوى الثقة في التحليل
            5. العبارات الرئيسية
            
            ارجع النتيجة في صيغة JSON واضحة.
            """,
            
            "probing_issues": """
            العميل أعطى تقييم منخفض (1-2 نجوم).
            أنت تحاول فهم المشاكل المحددة بطريقة متفهمة ومتعاطفة.
            
            أسلوبك:
            - معتذر ومتفهم
            - يطرح أسئلة محددة عن المشاكل
            - يظهر اهتمام حقيقي بحل المشكلة
            - يطلب تفاصيل إضافية بلطف
            - يعتذر عن التجربة السيئة
            
            اسأل عن جوانب محددة مثل:
            - جودة الطعام
            - سرعة الخدمة
            - تعامل الموظفين
            - نظافة المكان
            - دقة الطلب
            """,
            
            "celebrating_positive": """
            العميل أعطى تقييم ممتاز (4-5 نجوم).
            أنت متحمس ومتشكر لهذا التقييم الإيجابي.
            
            أسلوبك:
            - شاكر ومتحمس
            - يظهر السعادة بالتقييم الإيجابي
            - يطلب تفاصيل عما أعجبهم
            - يشجعهم على المشاركة
            - يدعوهم للعودة
            
            اسأل عن:
            - الأطباق التي أعجبتهم أكثر
            - تجربة الخدمة
            - ما الذي ميز الزيارة
            - إذا كانوا سيوصون بالمطعم
            """,
            
            "understanding_neutral": """
            العميل أعطى تقييم متوسط (3 نجوم).
            أنت تحاول فهم ما يمكن تحسينه.
            
            أسلوبك:
            - فضولي ومهتم بالتحسين
            - يقدر صراحة العميل
            - يطرح أسئلة عن التحسينات الممكنة
            - يظهر الرغبة في التطوير
            
            اسأل عن:
            - ما الذي كان جيداً
            - ما الذي يحتاج تحسين
            - اقتراحاتهم للتطوير
            - توقعاتهم للزيارة القادمة
            """,
            
            "wrapping_up": """
            أنت تنهي المحادثة بطريقة لائقة ومناسبة للتقييم المُستلم.
            
            للتقييمات السلبية:
            - اعتذر مرة أخيرة
            - اشكرهم على الصبر والوقت
            - وعد بالتحسين
            - ادعهم لإعطاء فرصة أخرى
            
            للتقييمات الإيجابية:
            - اشكرهم على التقييم الرائع
            - عبر عن السعادة برضاهم
            - ادعهم للعودة قريباً
            - اطلب منهم التوصية بالمطعم
            
            للتقييمات المتوسطة:
            - اشكرهم على الصراحة
            - وعد بالعمل على التحسينات
            - ادعهم لتجربة التطوير في الزيارة القادمة
            """
        }
        
        self.extraction_prompt = """
        أنت محلل بيانات متخصص في استخراج التقييمات المنظمة من محادثات خدمة العملاء.
        
        مهمتك استخراج وتنظيم المعلومات التالية من المحادثة:
        
        1. التقييم العام: رقم من 1-5 (إذا ذُكر صراحة)
        2. تقييمات الجوانب المختلفة:
           - جودة الطعام (1-5)
           - جودة الخدمة (1-5)
           - نظافة المكان (1-5)
           - الأسعار/القيمة مقابل المال (1-5)
           - السرعة (1-5)
        
        3. المواضيع المذكورة: قائمة بالمواضيع التي ناقشها العميل
        4. الأطباق المحددة: الأطباق أو المنتجات التي ذكرها العميل
        5. درجة المشاعر: رقم من -1 (سلبي جداً) إلى 1 (إيجابي جداً)
        6. النقاط الرئيسية: أهم ما ذكره العميل
        7. اقتراحات التحسين: ما اقترحه العميل أو ما يمكن استنتاجه
        8. التوصية: هل سيوصي العميل بالمطعم للآخرين؟
        
        ارجع النتيجة في صيغة JSON منظمة ومفصلة.
        إذا لم يذكر العميل معلومة معينة، ضع null أو قائمة فارغة.
        """
        
        self.personalization_prompt = """
        أنت كاتب محتوى متخصص في إنشاء رسائل شخصية لخدمة العملاء.
        
        أنشئ رسالة ترحيب طبيعية وودودة تناسب:
        - الثقافة السعودية
        - توقيت الزيارة المناسب
        - النبرة المطلوبة حسب القالب
        
        الرسالة يجب أن:
        - تبدأ بتحية مناسبة
        - تشكر العميل على الزيارة
        - تشير إلى توقيت الزيارة بطريقة طبيعية
        - تطلب التقييم دون إلحاح
        - تنتهي بسؤال مفتوح يشجع الرد
        - لا تتجاوز 100 كلمة
        """
    
    def get_initial_greeting(self, template: str = "default") -> str:
        """Get greeting template for specified style"""
        return self.greeting_templates.get(template, self.greeting_templates["default"])
    
    def get_message_analysis_prompt(self) -> str:
        """Get prompt for message analysis"""
        return self.stage_prompts["message_analysis"]
    
    def get_response_prompt(self, stage: str, action: str) -> str:
        """Get response prompt for specific stage and action"""
        if stage in self.stage_prompts:
            return self.stage_prompts[stage]
        return self.stage_prompts["understanding_neutral"]  # Default
    
    def get_extraction_prompt(self) -> str:
        """Get prompt for structured feedback extraction"""
        return self.extraction_prompt
    
    def get_personalization_prompt(self) -> str:
        """Get prompt for message personalization"""
        return self.personalization_prompt
    
    def get_follow_up_questions(self, rating: int, topics: List[str]) -> List[str]:
        """Get appropriate follow-up questions based on rating and topics"""
        
        questions = {
            1: [
                "ما هي المشكلة الرئيسية التي واجهتها؟",
                "هل كان هناك خطأ في طلبك؟",
                "كيف يمكننا تحسين تجربتك؟",
                "ما الذي خيب ظنك أكثر شيء؟"
            ],
            2: [
                "ما الجوانب التي لم تعجبك؟",
                "هل كانت هناك مشاكل في الخدمة؟",
                "ما رأيك في جودة الطعام؟",
                "ما الذي يمكننا فعله بشكل أفضل؟"
            ],
            3: [
                "ما الذي كان جيداً في تجربتك؟",
                "ما الذي تتمنى أن نحسنه؟",
                "هل لديك اقتراحات للتطوير؟",
                "ما الذي يجعل تقييمك 5 نجوم في المرة القادمة؟"
            ],
            4: [
                "ما الذي أعجبك أكثر شيء؟",
                "أي الأطباق كانت الأفضل؟",
                "كيف كانت تجربة الخدمة؟",
                "هل ستوصي أصدقاءك بالمطعم؟"
            ],
            5: [
                "ما الذي جعل تجربتك مميزة؟",
                "أي الأطباق تنصح بها بشدة؟",
                "كيف كان تعامل فريق العمل معك؟",
                "ما الذي يميزنا عن المطاعم الأخرى؟"
            ]
        }
        
        base_questions = questions.get(rating, questions[3])
        
        # Add topic-specific questions
        topic_questions = {
            "food": "حدثنا أكثر عن رأيك في الطعام",
            "service": "كيف وجدت مستوى الخدمة؟",
            "cleanliness": "ما رأيك في نظافة المكان؟",
            "price": "هل تشعر أن الأسعار مناسبة للجودة؟",
            "speed": "هل كان وقت انتظار الطلب مناسباً؟"
        }
        
        # Add relevant topic questions
        for topic in topics:
            if topic.lower() in topic_questions:
                base_questions.append(topic_questions[topic.lower()])
        
        return base_questions[:3]  # Return max 3 questions
    
    def get_sentiment_responses(self, sentiment_score: float) -> Dict[str, str]:
        """Get appropriate response phrases based on sentiment"""
        
        if sentiment_score <= -0.7:
            return {
                "acknowledgment": "نعتذر بشدة لهذه التجربة السيئة",
                "empathy": "نتفهم انزعاجك تماماً",
                "action": "سنعمل فوراً على حل هذه المشكلة"
            }
        elif sentiment_score <= -0.3:
            return {
                "acknowledgment": "نعتذر لعدم تلبية توقعاتك",
                "empathy": "نقدر صراحتك في التقييم",
                "action": "سنأخذ ملاحظاتك بعين الاعتبار للتحسين"
            }
        elif sentiment_score <= 0.3:
            return {
                "acknowledgment": "نشكرك على وقتك في التقييم",
                "empathy": "نقدر رأيك الصادق",
                "action": "سنعمل على تحسين النقاط التي ذكرتها"
            }
        elif sentiment_score <= 0.7:
            return {
                "acknowledgment": "نسعد بتقييمك الإيجابي",
                "empathy": "يسعدنا أنك استمتعت بالتجربة",
                "action": "سنحرص على الاستمرار في تقديم خدمة ممتازة"
            }
        else:
            return {
                "acknowledgment": "نشكرك على هذا التقييم الرائع!",
                "empathy": "يملؤنا الفخر برضاك التام",
                "action": "سنواصل العمل لنبقى عند حسن ظنك"
            }
    
    def get_closing_messages(self, overall_rating: int) -> str:
        """Get appropriate closing message based on overall rating"""
        
        if overall_rating <= 2:
            return """
            نعتذر مرة أخيرة عن التجربة التي لم تكن على مستوى التوقعات.
            نأمل أن تمنحنا فرصة أخرى لنثبت لك التحسن.
            شكراً لك على وقتك وصبرك. 🙏
            """
        elif overall_rating == 3:
            return """
            نشكرك على صراحتك وتقييمك البناء.
            سنعمل بجد على التحسينات التي ذكرتها.
            نتطلع لاستقبالك مرة أخرى قريباً! 😊
            """
        else:  # 4-5 stars
            return """
            شكراً جزيلاً على هذا التقييم الرائع! 
            يسعدنا جداً أنك استمتعت بتجربتك معنا.
            ننتظرك قريباً لتجربة أطباق جديدة ولذيذة! 🌟
            """